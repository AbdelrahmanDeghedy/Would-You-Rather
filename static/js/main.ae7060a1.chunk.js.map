{"version":3,"sources":["utils/api.js","utils/helper.js","actions/question.js","actions/user.js","actions/shared.js","actions/authedUser.js","components/Login.js","components/Logout.js","components/Navbar.js","components/Question.js","components/Dashboard.js","components/NotFound.js","components/AnswerQuestion.js","components/NewQuestion.js","components/Leaderboard.js","components/App.js","middleware/index.js","middleware/logger.js","reducers/index.js","reducers/authedUser.js","reducers/user.js","reducers/question.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","ADD_QUESTION","RECEIVE_QUESTION","ADD_QUESTION_ANSWER","RECEIVE_USER","ADD_USER_QUESTION","ADD_USER_ANSWER","handleInitialData","dispatch","showLoading","all","then","user","type","hideLoading","handleAddQuestion","getState","console","log","addQuestion","qid","addUserQuestion","handleAddAnswer","answer","_saveQuestionAnswer","authedUSer","addQuestionAnswer","addUserAnswer","SET_AUTHED_USER","UNSET_AUTHED_USER","setAuthedUser","unsetAuthedUser","Login","state","selectedUser","handleChangeSelection","e","preventDefault","setState","target","value","handleSubmit","props","alert","this","className","onSubmit","defaultValue","onChange","disabled","Object","keys","map","uid","Component","connect","Logout","handleLogout","to","onClick","withRouter","Navbar","exact","activeClassName","src","alt","Question","handleClick","getAttribute","history","push","pathname","ans","option-one-text","option-two-text","Dashboard","toggle","handleToggle","document","querySelector","answeredQuestionsIds","filter","includes","unansweredQuestionsIds","sort","x","y","NotFound","handleHome","AnswerQuestion","handleAnswer","selectedOption","textContent","trim","location","option","replace","optionOneLength","length","optionTwoLength","optionOnePercentage","optionTwoPercentage","toFixed","NewQuestion","handleOptionOne","handleOptionTwo","htmlFor","Leaderboard","userScore","a","score","reverse","el","index","App","component","path","applyMiddleware","thunk","store","next","action","group","returnValue","groupEnd","combineReducers","loadingBar","loadingBarReducer","createStore","reducers","middleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ae7060a1.chunk.js","sourcesContent":["import {\r\n  formatQuestion,\r\n} from './helper';\r\n\r\nlet users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: \"https://ui.dev/would-you-rather/sarah.jpg\",\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/tyler.jpg\",\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/dan.jpg\",\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillain'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\n\r\n\r\nexport function _getUsers () {\r\n    return new Promise((res, rej) => {\r\n      setTimeout(() => res({...users}), 1000)\r\n    })\r\n  }\r\n  \r\n  export function _getQuestions () {\r\n    return new Promise((res, rej) => {\r\n      setTimeout(() => res({...questions}), 1000)\r\n    })\r\n  }\r\n\r\n  export function getInitialData () {\r\n    return Promise.all ([\r\n        _getQuestions(),\r\n        _getUsers ()\r\n    ])\r\n    .then (([question, user]) => {\r\n      return {\r\n        user,\r\n        question\r\n      }\r\n    })\r\n}\r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n      \r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}\r\n","\r\nexport function generateUID () {\r\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n  }\r\n  \r\n  export function formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n      id: generateUID(),\r\n      timestamp: Date.now(),\r\n      author,\r\n      optionOne: {\r\n        votes: [],\r\n        text: optionOneText,\r\n      },\r\n      optionTwo: {\r\n        votes: [],\r\n        text: optionTwoText,\r\n      }\r\n    }\r\n  }\r\n  \r\n  ","\r\nexport const ADD_QUESTION = \"ADD_QUESTION\";\r\nexport const RECEIVE_QUESTION = \"RECEIVE_QUESTION\";\r\nexport const ADD_QUESTION_ANSWER = \"ADD_QUESTION_ANSWER\";\r\n\r\nexport function receiveQuestion (questions) {\r\n    return {\r\n        type : RECEIVE_QUESTION,\r\n        questions\r\n    }\r\n}\r\n\r\nexport function addQuestion (question) {\r\n    return {\r\n        type : ADD_QUESTION,\r\n        question\r\n    }\r\n}\r\n\r\nexport function addQuestionAnswer (authedUSer, qid, answer) {\r\n    return {\r\n        type : ADD_QUESTION_ANSWER,\r\n        authedUSer,\r\n        qid,    // the user that answered it\r\n        answer\r\n    }\r\n}\r\n","export const RECEIVE_USER = \"RECEIVE_USER\";\r\nexport const ADD_USER_QUESTION = \"ADD_USER_QUESTION\";\r\nexport const ADD_USER_ANSWER = \"ADD_USER_ANSWER\";\r\n\r\nexport function receiveUser (users) {\r\n    return {\r\n        type : RECEIVE_USER,\r\n        users\r\n    }\r\n}\r\n\r\nexport function addUserQuestion (qid, authedUser) {\r\n    return {\r\n        type : ADD_USER_QUESTION,\r\n        qid,\r\n        authedUser\r\n    }\r\n}\r\n\r\nexport function addUserAnswer (authedUser, qid, answer) {\r\n    return {\r\n        type : ADD_USER_ANSWER,\r\n        authedUser,\r\n        qid,\r\n        answer\r\n    }\r\n}","import { getInitialData, _saveQuestion, _saveQuestionAnswer } from '../utils/api';\r\nimport { receiveQuestion, addQuestion, addQuestionAnswer } from './question';\r\nimport { receiveUser, addUserQuestion, addUserAnswer } from './user';\r\nimport { showLoading, hideLoading } from 'react-redux-loading';\r\n\r\n\r\nexport function handleInitialData () {\r\n    return (dispatch) => {\r\n        dispatch (showLoading ())\r\n        return getInitialData ()\r\n        .then (({user, question}) => {\r\n            dispatch (receiveQuestion (question));\r\n            dispatch (receiveUser (user))\r\n            dispatch (hideLoading ())\r\n        })\r\n    }\r\n}\r\n\r\nexport function handleAddQuestion (optionOneText, optionTwoText) {\r\n    \r\n    return (dispatch, getState) => {\r\n        const { authedUser } = getState (); \r\n        return _saveQuestion ({\r\n            optionOneText,\r\n            optionTwoText,\r\n            author : authedUser\r\n        })\r\n        .then ((question) => {\r\n            console.log(\"question from reducer: \", question);\r\n            dispatch (addQuestion (question));\r\n            dispatch (addUserQuestion (question.id, authedUser))\r\n        })\r\n    }\r\n}\r\n\r\nexport function handleAddAnswer (qid, answer) {\r\n    return (dispatch, getState) => {\r\n        const { authedUser } = getState ();\r\n        console.log(\"shared debug\", qid, answer);\r\n        return _saveQuestionAnswer ({\r\n            authedUser,\r\n            qid,\r\n            answer\r\n        })\r\n        .then (() => {\r\n            dispatch (addQuestionAnswer (authedUser, qid, answer));\r\n            dispatch (addUserAnswer (authedUser, qid, answer));\r\n        })\r\n    }\r\n}","\r\nexport const SET_AUTHED_USER = \"SET_AUTHED_USER\";\r\nexport const UNSET_AUTHED_USER = \"UNSET_AUTHED_USER\";\r\n\r\nexport function setAuthedUser (id) {\r\n    return {\r\n        type : SET_AUTHED_USER,\r\n        id\r\n    }\r\n}\r\n\r\nexport function unsetAuthedUser () {\r\n    return {\r\n        type : UNSET_AUTHED_USER,\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthedUser } from '../actions/authedUser';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        selectedUser : \"\",\r\n    }\r\n\r\n    // Controlled Component\r\n    handleChangeSelection = (e) => {\r\n        e.preventDefault ();\r\n        this.setState ({selectedUser : e.target.value})\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault ();\r\n        if (this.state.selectedUser === \"\") {\r\n            alert ('Please logi with a valid user!');\r\n            return;\r\n        }\r\n        this.props.dispatch (setAuthedUser (this.state.selectedUser))\r\n    }\r\n\r\n    render () {\r\n        const { users } = this.props;\r\n        return (\r\n            <div>\r\n                <h3 className=\"login-header\">Who Are You?</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <select defaultValue=\"\" onChange={this.handleChangeSelection} className=\"login-selector\">\r\n                    <option  value=\"\"  disabled> Select a User </option>\r\n                    {Object.keys(users).map ((uid) =>  \r\n                        <option key={uid} value={uid}> {uid} </option>\r\n                    )\r\n                    }\r\n                    </select>\r\n\r\n                    <button className=\"login-btn btn\"> Submit </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        users : state.user,\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps) (Login);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { unsetAuthedUser } from '../actions/authedUser';\r\n\r\nclass Logout extends Component {\r\n    \r\n    handleLogout = () => {\r\n        this.props.dispatch (unsetAuthedUser ());\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <Fragment>\r\n                <Link to=\"/\" onClick={this.handleLogout} className=\"link\">\r\n                    Logout\r\n                </Link>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter (connect () (Logout));","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Logout from './Logout';\r\n\r\nclass Navbar extends Component {\r\n    render () {\r\n        \r\n        const { authedUser, users } = this.props\r\n        console.log(\"avatar is: \", users[authedUser].avatarURL);\r\n        return (\r\n            <div className=\"nav-bar\">\r\n\r\n                    <NavLink to=\"/Would-You-Rather\" exact className=\"title\">\r\n                        Would You Rather\r\n                    </NavLink>\r\n\r\n                <div className=\"right-portion\">\r\n                    <NavLink to=\"/leaderboard\" exact className=\"link\" activeClassName=\"link-active\">\r\n                        Leaderboard\r\n                    </NavLink>\r\n\r\n                    <NavLink to=\"/add\" exact className=\"link\" activeClassName=\"link-active\">\r\n                        Add a Question    \r\n                    </NavLink>\r\n                    \r\n                    <div className=\"img-container navbar-img\">\r\n                        <img \r\n                            src={users[authedUser].avatarURL}\r\n                            alt={`${users[authedUser].name}'s Image`}\r\n                            className=\"img\"\r\n                        />\r\n                    </div>\r\n                    \r\n                    {users[authedUser].name}\r\n                    \r\n                    <Logout />\r\n\r\n                </div>\r\n            \r\n                <hr className=\"horizontal-line\"/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        authedUser : state.authedUser,\r\n        users : state.user,\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps) (Navbar)\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Question extends Component {\r\n    handleClick = (e) => {\r\n        const optionOneText = e.target.getAttribute ('option-one-text');\r\n        const optionTwoText = e.target.getAttribute ('option-two-text');\r\n        const answer = e.target.getAttribute ('answer');\r\n        const qid = e.target.getAttribute ('qid');\r\n\r\n        this.props.history.push ({\r\n            pathname : `/questions/${qid}`,\r\n            state : {optionOneText, optionTwoText, answer, qid}\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const { qid, questions, ans } = this.props;\r\n        const optionOneText = questions[qid].optionOne.text;\r\n        const optionTwoText = questions[qid].optionTwo.text;\r\n\r\n        return (\r\n            <div className=\"question-container\">\r\n                <h4 className=\"cursor-pointer\" onClick={this.handleClick} qid={qid} answer={ans} option-one-text={optionOneText} option-two-text={optionTwoText} > Would You rather: </h4>\r\n                <ul>\r\n                    <li className={ans === optionOneText ? \"active-answer\" : \"\"} > {optionOneText} </li>\r\n                    <li className={ans === optionTwoText ? \"active-answer\" : \"\"} > {optionTwoText} </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter (Question);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './Navbar';\r\nimport Question from './Question';\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        toggle : \"unanswered\",\r\n    }\r\n\r\n    handleToggle = (e) => {\r\n        this.setState ({\r\n            toggle: (this.state.toggle === \"unanswered\" ? \"answered\" : \"unanswered\")\r\n        }, () => {\r\n            // enable the other button\r\n            e.target.disabled = true;\r\n        })\r\n        \r\n        // disable current button\r\n        document.querySelector (`.${this.state.toggle}`).disabled = false;\r\n        \r\n    }\r\n\r\n    componentDidMount () {\r\n        document.querySelector (`.unanswered`).disabled = true;\r\n    }\r\n\r\n    render () {\r\n        const { questions, authedUser } = this.props;\r\n        const answeredQuestionsIds = Object.keys (questions).filter ((qid) => ( questions[qid].optionOne.votes.includes (authedUser) ) || (questions[qid].optionTwo.votes.includes (authedUser) ))\r\n        const unansweredQuestionsIds = Object.keys (questions).filter ((qid) => !answeredQuestionsIds.includes (qid));\r\n        \r\n        // sort descending based on the time stamp (to show the newly added questions first)\r\n        answeredQuestionsIds.sort ((x, y) => {\r\n            if (questions[x].timestamp > questions[y].timestamp) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        });\r\n\r\n        unansweredQuestionsIds.sort ((x, y) => {\r\n            if (questions[x].timestamp > questions[y].timestamp) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        });\r\n\r\n        return (\r\n            <Fragment>\r\n                <Navbar />\r\n                <div className=\"toggle-btns\">\r\n                    <button className=\"toggle-btn answered\" onClick={this.handleToggle}> Answered Questions: </button>\r\n                    <button className=\"toggle-btn unanswered\" onClick={this.handleToggle}> Unanswered Questions: </button>\r\n                </div>\r\n                \r\n                {\r\n                    this.state.toggle === \"answered\" ? \r\n                    answeredQuestionsIds.map ((qid) => {\r\n                        return <Question key={qid} qid={qid} questions={questions} ans={questions[qid].optionOne.votes.includes (authedUser) ? questions[qid].optionOne.text : questions[qid].optionTwo.text} /> \r\n                    }) : \r\n                    unansweredQuestionsIds.map ((qid) => \r\n                        <Question key={qid} qid={qid} questions={questions} ans=\"no\" />\r\n                    )\r\n                }\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        questions : state.question,\r\n        authedUser : state.authedUser,\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps) (Dashboard)","import React, { Component } from 'react';\r\nimport { withRouter }from 'react-router-dom';\r\n\r\nclass NotFound extends Component {\r\n    \r\n    handleHome = () => {\r\n        this.props.history.push ('/');\r\n    }\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    404, Not Found!\r\n                </h1>\r\n                <a onClick={this.handleHome} className=\"btn\"> Go Home </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter (NotFound);","import React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './Navbar'\r\nimport { handleAddAnswer } from '../actions/shared';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nclass AnswerQuestion extends Component {\r\n\r\n    handleAnswer = (e) => {\r\n        const selectedOption = e.target.textContent.trim ();\r\n        \r\n        const { dispatch, authedUser } = this.props;\r\n        const { optionOneText, optionTwoText, qid } = this.props.location.state;\r\n        const { questions } = this.props;\r\n        let option = \"\";\r\n        \r\n        if (selectedOption === optionOneText) {\r\n            option = \"optionOne\";\r\n        }\r\n        else if (selectedOption === optionTwoText) {\r\n            option = \"optionTwo\";\r\n        }\r\n        console.log(\"answer is: \", questions[qid][option].text);\r\n\r\n        questions[qid][option].votes.push (authedUser);\r\n        \r\n        // Update the API\r\n        dispatch (handleAddAnswer(qid, option));\r\n\r\n        \r\n        this.props.history.replace ({\r\n            pathname : `/questions/${qid}`,\r\n            state : {optionOneText, optionTwoText, answer :  questions[qid][option].text, qid}\r\n        });\r\n        \r\n    }\r\n\r\n    render () {\r\n\r\n        // Catch invalid questions urls\r\n        if (!this.props.location.state) {\r\n            return <NotFound />\r\n        }\r\n\r\n        const { optionOneText, optionTwoText, answer, qid } = this.props.location.state;\r\n        const { questions, users } = this.props;\r\n\r\n        const optionOneLength = questions[qid]?.optionOne?.votes?.length;\r\n        const optionTwoLength = questions[qid]?.optionTwo?.votes?.length;\r\n        const optionOnePercentage  = (optionOneLength / (optionOneLength + optionTwoLength)) * 100;\r\n        const optionTwoPercentage  = (optionTwoLength / (optionOneLength + optionTwoLength)) * 100;\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n            <Navbar />\r\n            <div className=\"question-container\">\r\n                \r\n                <h4 className=\"answer-question-header\"> Would You rather: \r\n                    <span className=\"question-asker\"> Asked by: \r\n                        <div className=\"img-container move-right\">\r\n                            <img \r\n                                src={users[questions[qid].author].avatarURL}\r\n                                alt={`${users[questions[qid].author].name}'s Image`}\r\n                                className=\"img\"\r\n                            />\r\n                        </div>\r\n                    </span>\r\n                </h4>\r\n                \r\n\r\n                {answer === optionOneText && (\r\n                    <Fragment>\r\n                        <button disabled className=\"answer-option cursor-pointer active-chosen-answer\"> {optionOneText} </button>\r\n                        <button disabled className=\"answer-option cursor-pointer \"> {optionTwoText} </button>\r\n                        <div> First Option <span className=\"different-color-text\"> ({optionOnePercentage.toFixed (1)}%) </span> / Second Option <span className=\"different-color-text\"> ({optionTwoPercentage.toFixed (1)}%)</span> </div>\r\n                        <div> First Option: <span className=\"different-color-text\"> {optionOneLength} votes</span> / Second Option: <span className=\"different-color-text\"> {optionTwoLength} votes</span> </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                {answer === optionTwoText && (\r\n                    <Fragment>\r\n                        <button disabled className=\"answer-option cursor-pointer \"> {optionOneText} </button>\r\n                        <button disabled className=\"answer-option cursor-pointer active-chosen-answer\"> {optionTwoText} </button>\r\n                        <div> First Option <span className=\"different-color-text\"> ({optionOnePercentage.toFixed (1)}%) </span> / Second Option <span className=\"different-color-text\"> ({optionTwoPercentage.toFixed (1)}%)</span> </div>\r\n                        <div> First Option: <span className=\"different-color-text\"> {optionOneLength} votes</span> / Second Option: <span className=\"different-color-text\"> {optionTwoLength} votes</span> </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                {(answer !== optionOneText && answer !== optionTwoText) && (\r\n                    <Fragment>\r\n                        <button className=\"answer-option cursor-pointer answer-option-hover\" onClick={this.handleAnswer}> {optionOneText} </button>\r\n                        <button className=\"answer-option cursor-pointer answer-option-hover\" onClick={this.handleAnswer}> {optionTwoText} </button>\r\n                    </Fragment>\r\n                )}\r\n                \r\n                \r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        questions : state.question,\r\n        authedUser : state.authedUser,\r\n        users : state.user,\r\n    }\r\n}\r\n\r\nexport default withRouter (connect (mapStateToProps) (AnswerQuestion));","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { handleAddQuestion } from '../actions/shared';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\n\r\nclass NewQuestion extends Component {\r\n    state = {\r\n        optionOne : \"\",\r\n        optionTwo : \"\",\r\n    }\r\n    \r\n    handleOptionOne = (e) => {\r\n        this.setState ({\r\n            optionOne : e.target.value\r\n        })\r\n    }\r\n\r\n    handleOptionTwo = (e) => {\r\n        this.setState ({\r\n            optionTwo : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault ();\r\n        const { dispatch } = this.props;\r\n        const { optionOne, optionTwo } = this.state;\r\n\r\n        dispatch (handleAddQuestion (optionOne, optionTwo));\r\n\r\n        this.props.history.push ('/');\r\n    }\r\n\r\n    render () {\r\n         \r\n        return (\r\n            <Fragment>\r\n                <Navbar />\r\n                <div className=\"add-question-card\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <h3 className=\"add-question-header\"> Would You Rather: </h3>\r\n                        <label htmlFor=\"o1\" className=\"add-question-label\">\r\n                            Option One\r\n                        </label>\r\n                        <input className=\"add-question-input\" onChange={this.handleOptionOne} type=\"text\" name=\"optionOne\" id=\"o1\"/>\r\n\r\n                        <label className=\"add-question-label\" htmlFor=\"o2\">\r\n                            Option Two\r\n                        </label>\r\n                        <input className=\"add-question-input\" onChange={this.handleOptionTwo} type=\"text\" name=\"optionTwo\" id=\"o2\"/>\r\n\r\n                        <button className=\"btn add-question-btn\"> Submit </button>\r\n                    </form>\r\n\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter (connect () (NewQuestion));","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './Navbar';\r\n\r\nclass Leaderboard extends Component {\r\n    state = {\r\n        userScore : [],\r\n    }\r\n    async componentDidMount () {\r\n        const { users } = this.props;\r\n        const score = [];\r\n        Object.keys (users).map ((uid) => score.push ( [users[uid].questions.length + Object.keys (users[uid].answers).length, uid] ));\r\n        score.sort ().reverse ();\r\n        return await this.setState ({userScore : score})\r\n    }\r\n    render () {\r\n        const { userScore } = this.state; \r\n        const { users } = this.props;\r\n        console.log(userScore);\r\n        return (\r\n            <Fragment>\r\n                <Navbar />\r\n                {\r\n                    userScore.map ((el, index) => {\r\n                        return (\r\n                        <div className=\"leaderboard-card\" key={el[1]}> \r\n                            <div className=\"leaderboard-card-number\"> {index + 1} </div>\r\n                            <div> Name: {users[el[1]].name} </div>\r\n                            <div> Question Asked: {users[el[1]].questions.length}</div>\r\n                            <div> Question Answered: {Object.keys (users[el[1]].answers).length}</div>\r\n                            \r\n                            <div className=\"leaderboard-img-container\">\r\n                            <img \r\n                                src={users[el[1]].avatarURL}\r\n                                alt={`${users[el[1]].name}'s Image`}\r\n                                className=\"img\"\r\n                            />\r\n                        </div>\r\n                        </div>\r\n                    )})\r\n                }\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        users : state.user,\r\n        authedUser : state.authedUser,\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps) (Leaderboard);\r\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { handleInitialData } from '../actions/shared';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport AnswerQuestion from './AnswerQuestion';\nimport NotFound from './NotFound';\nimport NewQuestion from './NewQuestion';\nimport Leaderboard from './Leaderboard';\nimport LoadingBar from 'react-redux-loading';\n\nclass App extends Component {\n    componentDidMount () {\n        this.props.dispatch (handleInitialData ())\n    }\n\n    render () {\n        const { authedUser } = this.props;\n        return (\n            <Fragment>\n                <LoadingBar />\n                <Switch>\n                {\n                    authedUser === null ? \n                    <Route component={Login} /> :\n                    <Fragment>\n                        <Route exact path=\"/\" component={Dashboard} />\n                        <Route exact path=\"/questions/:id\" component={AnswerQuestion} />\n                        <Route exact path=\"/add\" component={NewQuestion} />\n                        <Route exact path=\"/leaderboard\" component={Leaderboard} />\n                        \n                    </Fragment>\n                }\n                    <Route component={NotFound} />\n                </Switch>\n            </Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps (state) {\n    return {\n        authedUser : state.authedUser,\n    }\n}\n\nexport default connect (mapStateToProps) (App);","import thunk from 'redux-thunk';\r\nimport { applyMiddleware } from 'redux';\r\nimport { logger } from \"./logger\";\r\n\r\nexport default applyMiddleware (\r\n        thunk,\r\n        logger\r\n)\r\n","export const logger = (store) => (next) => (action) => {\r\n    console.group (action.type)\r\n        console.log('The action is: ', action);\r\n        const returnValue = next (action);\r\n        console.log('The new state is: ', store.getState());\r\n    console.groupEnd ();\r\n    return returnValue; \r\n}","import { combineReducers } from 'redux';\r\nimport authedUser from './authedUser';\r\nimport user from './user';\r\nimport question from './question';\r\nimport { loadingBarReducer } from 'react-redux-loading';\r\n\r\nexport default combineReducers ({\r\n    authedUser,\r\n    user,\r\n    question,\r\n    loadingBar : loadingBarReducer,\r\n})","import { SET_AUTHED_USER, UNSET_AUTHED_USER } from '../actions/authedUser';\r\n\r\nexport default function authedUser (state = null, action) {\r\n    if (action.type === SET_AUTHED_USER) {\r\n        return action.id\r\n    }\r\n    else if (action.type === UNSET_AUTHED_USER) {\r\n        return null;\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}","import { ADD_USER_ANSWER, ADD_USER_QUESTION, RECEIVE_USER } from '../actions/user';\r\n\r\nexport default function users (state = {}, action) {\r\n    if (action.type === ADD_USER_ANSWER) {\r\n        const { authedUser, qid, answer } = action\r\n        return {\r\n            ...state,\r\n            [authedUser] : {\r\n                ...state[authedUser],\r\n                answers : {\r\n                    ...state[authedUser].answers,\r\n                    [qid] : answer,\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (action.type === ADD_USER_QUESTION) {\r\n        const { qid, authedUser } = action;\r\n        return {\r\n            ...state,\r\n            [authedUser] : {\r\n                ...state[authedUser],\r\n                questions : state[authedUser].questions.concat ([qid])\r\n            }\r\n        }\r\n    }\r\n    else if (action.type === RECEIVE_USER) {\r\n        return {\r\n            ...state,\r\n            ...action.users,\r\n        }\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}","import { ADD_QUESTION, ADD_QUESTION_ANSWER, RECEIVE_QUESTION } from '../actions/question';\r\n\r\nexport default function questions (state = {}, action) {\r\n    if (action.type === ADD_QUESTION) {\r\n        return {\r\n            ...state,\r\n            [action.question.id] : action.question,\r\n        }\r\n\r\n    }\r\n    else if (action.type === ADD_QUESTION_ANSWER) {\r\n        const { authedUser, qid, answer } = action\r\n        return {\r\n            ...state,\r\n            [qid] : {\r\n                ...state[qid],\r\n                [answer] : {\r\n                    ...state[qid][answer],\r\n                    votes : state[qid][answer].votes.concat (authedUser),\r\n                }\r\n            },\r\n\r\n        }\r\n    }\r\n    else if (action.type === RECEIVE_QUESTION) {\r\n        return {\r\n            ...state,\r\n            ...action.questions\r\n        }\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';   \nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport middleware from './middleware';\nimport reducers from './reducers';\nimport { createStore } from 'redux';\n\n\nconst store = createStore (reducers, middleware);\n\nReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}